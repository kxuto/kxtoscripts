-- Control Stand (Godmode/Invisibility) - Extracted from Xenon V3
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local Player = Players.LocalPlayer

local function GetCharacter()
    return Player.Character or Player.CharacterAdded:Wait()
end

local function GetHumanoid()
    local Character = GetCharacter()
    return Character:FindFirstChildOfClass("Humanoid")
end

local function GetHRP()
    local Character = GetCharacter()
    return Character:FindFirstChild("HumanoidRootPart")
end

local function Notification(Title, Text, Duration)
    game.StarterGui:SetCore("SendNotification", {
        Title = Title,
        Text = Text,
        Duration = Duration
    })
end

local ControlStandEnabled = false
local CameraValue, TempStore

local function ToggleControlStand(State)
    if State then
        ControlStandEnabled = true
        
        local Character = GetCharacter()
        local HRP = GetHRP()
        local Humanoid = GetHumanoid()
        local RemoteFunc = Character:FindFirstChild("RemoteFunction")
        
        -- Summon stand if not already out
        if not Character:FindFirstChild("StandMorph") then
            RemoteFunc:InvokeServer("ToggleStand", "Toggle")
        end

        repeat task.wait() until Character:FindFirstChild("StandMorph")

        local StandMorph = Character.StandMorph
        local StandHumanoid = StandMorph.AnimationController
        
        -- Create temporary storage
        TempStore = Instance.new("Folder", game.ReplicatedStorage)
        TempStore.Name = "TempStorage"

        Notification("Control Stand", "Now controlling stand!", 5)

        -- Set camera to focus on stand
        CameraValue = Instance.new("ObjectValue", StandMorph.Parent) 
        CameraValue.Name = "FocusCam"
        CameraValue.Value = StandHumanoid

        -- Make character parts non-collidable
        for _, v in pairs(Character:GetDescendants()) do
            if v:IsA("BasePart") then
                v.CanCollide = false
            end
        end

        -- Sync jumps between character and stand
        local JumpConnection = Humanoid:GetPropertyChangedSignal("Jump"):Connect(function()
            if Humanoid.Jump then
                StandHumanoid.Jump = true
            end
        end)

        -- Hide Naples' Sewers to prevent visual glitches
        for _, v in pairs(workspace.Locations:GetChildren()) do
            if v.Name == "Naples' Sewers" then
                v.Parent = TempStore
            end
        end

        -- Main control loop
        local ControlConnection = RunService.Heartbeat:Connect(function()
            if not StandMorph then
                RemoteFunc:InvokeServer("ToggleStand", "Toggle")
                return
            end
            
            local Camera = workspace.CurrentCamera
            local MoveDirection = Camera.CFrame:VectorToObjectSpace(Humanoid.MoveDirection)
            
            -- Move stand based on your input
            StandHumanoid:Move(MoveDirection, true)
            
            -- Keep character hidden below stand
            HRP.CFrame = StandMorph:FindFirstChild("HumanoidRootPart").CFrame - Vector3.new(0, 36, 0)
        end)

        -- Disable stand attachment constraints
        StandMorph.PrimaryPart.StandAttach:FindFirstChild("AlignOrientation").Enabled = false
        StandMorph.PrimaryPart.StandAttach:FindFirstChild("AlignPosition").Enabled = false

        -- Set collision group to prevent clipping
        for _, v in pairs(StandMorph.Parent:GetDescendants()) do
            if v:IsA("BasePart") or v:IsA("UnionOperation") then
                game:GetService("PhysicsService"):SetPartCollisionGroup(v, "Players")
            end
        end

        -- Cleanup when toggled off
        return function()
            ControlStandEnabled = false
            JumpConnection:Disconnect()
            ControlConnection:Disconnect()
            
            -- Restore Naples' Sewers
            if TempStore then
                for _, v in pairs(TempStore:GetChildren()) do
                    if v.Name == "Naples' Sewers" then
                        v.Parent = workspace.Locations
                    end
                end
                TempStore:Destroy()
            end
            
            -- Return control to character
            local Character = GetCharacter()
            local StandPos = Character.StandMorph:FindFirstChild("HumanoidRootPart").CFrame
            Character:FindFirstChild("HumanoidRootPart").CFrame = StandPos
            
            if CameraValue then
                CameraValue:Destroy()
            end
            
            RemoteFunc:InvokeServer("ToggleStand", "Toggle")
            Notification("Control Stand", "Stopped controlling stand!", 5)
        end

    else
        -- Toggle off logic
        if ControlStandEnabled then
            ControlStandEnabled = false
        end
    end
end

-- Toggle function
local Enabled = false
return function()
    Enabled = not Enabled
    local cleanup = ToggleControlStand(Enabled)
    
    if not Enabled and cleanup then
        cleanup()
    end
end
