local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local PhysicsService = game:GetService("PhysicsService")
local Player = Players.LocalPlayer

-- Create custom collision group if it doesn't exist
if not PhysicsService:GetCollisionGroupName("GhostMode") then
    PhysicsService:CreateCollisionGroup("GhostMode")
    PhysicsService:CollisionGroupSetCollidable("GhostMode", "Default", false)
    PhysicsService:CollisionGroupSetCollidable("GhostMode", "GhostMode", false)
end

local function GetCharacter()
    return Player.Character or Player.CharacterAdded:Wait()
end

local function GetHumanoid()
    return GetCharacter():FindFirstChildOfClass("Humanoid")
end

local function GetHRP()
    return GetCharacter():FindFirstChild("HumanoidRootPart")
end

local function ToggleControlStand(State)
    if State then
        -- Summon stand if not already out
        local Character = GetCharacter()
        local RemoteFunc = Character:FindFirstChild("RemoteFunction")
        
        if not Character:FindFirstChild("StandMorph") then
            RemoteFunc:InvokeServer("ToggleStand", "Toggle")
        end
        
        repeat task.wait() until Character:FindFirstChild("StandMorph")
        local StandMorph = Character.StandMorph
        
        -- Disable stand attach constraints
        StandMorph.PrimaryPart.StandAttach:FindFirstChild("AlignOrientation").Enabled = false
        StandMorph.PrimaryPart.StandAttach:FindFirstChild("AlignPosition").Enabled = false
        
        -- Apply ghost collision to character and stand
        for _,v in pairs(Character:GetDescendants()) do
            if v:IsA("BasePart") or v:IsA("UnionOperation") then
                PhysicsService:SetPartCollisionGroup(v, "GhostMode")
            end
        end
        
        for _,v in pairs(StandMorph:GetDescendants()) do
            if v:IsA("BasePart") or v:IsA("UnionOperation") then
                PhysicsService:SetPartCollisionGroup(v, "GhostMode")
            end
        end
        
        -- Force camera to focus on stand
        local CameraValue = Instance.new("ObjectValue", StandMorph.Parent)
        CameraValue.Name = "FocusCam"
        CameraValue.Value = StandMorph.AnimationController
        
        -- Movement control
        local ControlLoop
        ControlLoop = RunService.Heartbeat:Connect(function()
            if not (StandMorph and StandMorph.PrimaryPart) then return end
            
            -- Move character underground (invisibility)
            local HRP = GetHRP()
            if HRP then
                HRP.CFrame = StandMorph.PrimaryPart.CFrame - Vector3.new(0, 36, 0)
            end
            
            -- Sync movement
            local Humanoid = GetHumanoid()
            if Humanoid then
                StandMorph.AnimationController:Move(Humanoid.MoveDirection, false)
            end
        end)
        
        return function() -- Cleanup function
            ControlLoop:Disconnect()
            if CameraValue then CameraValue:Destroy() end
            
            -- Restore collision
            local Character = GetCharacter()
            for _,v in pairs(Character:GetDescendants()) do
                if v:IsA("BasePart") or v:IsA("UnionOperation") then
                    PhysicsService:SetPartCollisionGroup(v, "Default")
                end
            end
            
            if Character:FindFirstChild("StandMorph") then
                for _,v in pairs(Character.StandMorph:GetDescendants()) do
                    if v:IsA("BasePart") or v:IsA("UnionOperation") then
                        PhysicsService:SetPartCollisionGroup(v, "Default")
                    end
                end
                RemoteFunc:InvokeServer("ToggleStand", "Toggle")
            end
        end
    end
end

-- Toggle system
local Enabled = false
local CleanupFunc

return function()
    Enabled = not Enabled
    if CleanupFunc then CleanupFunc() end
    CleanupFunc = ToggleControlStand(Enabled)
end
